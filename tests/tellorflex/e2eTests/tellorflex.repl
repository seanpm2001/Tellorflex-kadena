(load "../tellorflex-setup.repl")

(namespace (read-msg "ns"))
(use tellorflex) (use f-TRB)
(env-data
  { "ns": "free"
  , "admin-keyset": { "keys": [ "admin-public-key" ]}
  , "user-keyset": { "keys": [ "user-public-key" ], "pred": "keys-all" }
  , "reporter1": { "keys": [] }, "reporter2": { "keys": [] }, "reporter3": { "keys": [] }
  , "reporter4": { "keys": [] }, "reporter5": { "keys": [] }, "reporter6": { "keys": [] }
  , "reporter7": { "keys": [] }, "reporter8": { "keys": [] }, "reporter9": { "keys": [] }
  , "reporter10": { "keys": [] }, "reporter11": { "keys": [] }, "reporter12": { "keys": [] }
  , "reporter13": { "keys": [] }, "reporter14": { "keys": [] }, "reporter15": { "keys": [] }
  , "reporter16": { "keys": [] }, "reporter17": { "keys": [] }, "reporter18": { "keys": [] }
  , "reporter19": { "keys": [] }, "reporter20": { "keys": [] }
  })
(env-sigs [
  {"key": "admin-public-key", "caps": []},{"key": "user-public-key", "caps": []}
  ,{"key": "user-keyset", "caps": [(TRANSFER "user-keyset" FLEX_ACCOUNT 1000.0)]}
  ,{"key": "reporter1", "caps": [(TRANSFER "reporter1" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter2", "caps": [(TRANSFER "reporter2" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter3", "caps": [(TRANSFER "reporter3" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter4", "caps": [(TRANSFER "reporter4" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter5", "caps": [(TRANSFER "reporter5" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter6", "caps": [(TRANSFER "reporter6" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter7", "caps": [(TRANSFER "reporter7" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter8", "caps": [(TRANSFER "reporter8" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter9", "caps": [(TRANSFER "reporter9" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter10", "caps": [(TRANSFER "reporter10" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter11", "caps": [(TRANSFER "reporter11" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter12", "caps": [(TRANSFER "reporter12" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter13", "caps": [(TRANSFER "reporter13" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter14", "caps": [(TRANSFER "reporter14" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter15", "caps": [(TRANSFER "reporter15" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter16", "caps": [(TRANSFER "reporter16" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter17", "caps": [(TRANSFER "reporter17" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter18", "caps": [(TRANSFER "reporter18" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter19", "caps": [(TRANSFER "reporter19" FLEX_ACCOUNT 100.0)]}
  ,{"key": "reporter20", "caps": [(TRANSFER "reporter20" FLEX_ACCOUNT 100.0)]} ])
(print "***************************************************************************************")
(print "Realistic test with multiple stakers")

(add-staking-rewards "user-keyset" (h.precision 1000))
(let ((func (lambda (_ staker-num)
  (begin-tx)
  (f-TRB.create-account 
    (+ "reporter" (int-to-str 10 staker-num))
    (read-keyset (+ "reporter" (int-to-str 10 staker-num))))
  (f-TRB.mint
    (+ "reporter" (int-to-str 10 staker-num))
    (read-keyset (+ "reporter" (int-to-str 10 staker-num))) 1000.0)
  (commit-tx)
  (begin-tx)
  (deposit-stake 
    (+ "reporter" (int-to-str 10 staker-num))
    (read-keyset (+ "reporter" (int-to-str 10 staker-num)))
    (h.precision 100))
  (commit-tx)
  ) ))
  (fold (func) 0 (enumerate 1 20)) )

(namespace (read-msg "ns"))
(use tellorflex)
(env-chain-data {'block-time: (h.advanceTime (* 84600 10))})
(let ((func (lambda (_ staker-num)
  (add-staking-rewards "user-keyset" (h.precision 1))
  (begin-tx)
  (f-TRB.mint 
    (+ "reporter" (int-to-str 10 staker-num)) 
    (read-keyset (+ "reporter" (int-to-str 10 staker-num))) 100.0)
  (commit-tx)
  (begin-tx)
  (deposit-stake 
    (+ "reporter" (int-to-str 10 staker-num))
    (read-keyset (+ "reporter" (int-to-str 10 staker-num)))
    (h.precision 100))
  (commit-tx)
  ) ))
  (fold (func) 0 (enumerate 1 20))

)
(namespace (read-msg "ns"))
(use tellorflex)
(env-chain-data {'block-time: (h.advanceTime (* 84600 80))})
(let ((func (lambda (_ staker-num)
  (add-staking-rewards "user-keyset" (h.precision 1))
  (begin-tx)
  (f-TRB.mint 
    (+ "reporter" (int-to-str 10 staker-num))
    (read-keyset (+ "reporter" (int-to-str 10 staker-num))) 100.0)
  (commit-tx)
  (begin-tx)
  (deposit-stake 
    (+ "reporter" (int-to-str 10 staker-num))
    (read-keyset (+ "reporter" (int-to-str 10 staker-num))) 
    (h.precision 100))
  (commit-tx)
  ) ))
  (fold (func) 0 (enumerate 1 20)) )

(namespace (read-msg "ns"))
(use tellorflex)
(env-chain-data {'block-time: (h.advanceTime (* 84600 80))})
;  request withdrawal for all 20 stakers
(let ((func (lambda (_ staker-num)
  (let* ((staker-info (get-staker-info (+ "reporter" (int-to-str 10 staker-num)) ))
         (stake-balance (at 'staked-balance staker-info)))
        (begin-tx)
        (request-staking-withdraw (+ "reporter" (int-to-str 10 staker-num)) stake-balance)
        (commit-tx) ) ) ) )
  (fold (func) 0 (enumerate 1 20)) )
;  withdraw all 20 stakers
(namespace (read-msg "ns"))
(use tellorflex)
(env-chain-data {'block-time: (h.advanceTime (* 84600 88))})
(let ((func (lambda (_ staker-num)
  (begin-tx)
  (withdraw-stake (+ "reporter" (int-to-str 10 staker-num)) )
  (commit-tx)
  ) ))
  (fold (func) 0 (enumerate 1 20))

)
